ggsave(paste0(img_dir,basename,"drug_risk_vs_probe_expression_significant_candidate_genes_ades.png"),g,width=12,height=9)
obs_vs_random_cor_dts[
gene %in% gene_candidates & gene=="CYP2C8" &
fdr_rprobe<0.05 & pvalue_other_ade>0.05 &
auroc_rprobe>auroc_other_ade]
ade_ = "21602517_35506590"
probe_ = "208147_s_at"
gene_ = "CYP2C8"
g <-
plot_drug_events(dts[database=="covariate_adjusted" & ade==ade_])
g
g <- gdata[
PROBEID==probe_,.(sample,nichd,value)
] %>%
na.omit() %>%
ggplot(aes(factor(nichd,levels=stages),log2(value))) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(alpha=0.1) +
xlab("") +
ylab("Log2 gene expression") +
ggtitle(paste0("Probe ",probe_," within ",gene_)) +
theme(
axis.text.x = element_text(angle=45,vjust=1,hjust=1)
)
g
gene_cor_dts[
ade==ade_ & gene==gene_ & PROBEID==probe_
] %>%
ggplot(aes(est)) +
geom_histogram() +
xlab("Random probe and drug risk correlations") +
ylab("Frequency")
fread(paste0(data_dir,
basename,
"cyp_probe_expression_drug_risk_correlations.csv"))
gene_cor_dts <-
fread(paste0(data_dir,
basename,
"cyp_probe_expression_drug_risk_correlations.csv"))
gene_cor_dts[
ade==ade_ & gene==gene_ & PROBEID==probe_
] %>%
ggplot(aes(est)) +
geom_histogram() +
xlab("Random probe and drug risk correlations") +
ylab("Frequency")
ade_ = "21602517_36617162"
plot_drug_events(dts[database=="covariate_adjusted" & ade==ade_])
gdata[
PROBEID==probe_,.(sample,nichd,value)
] %>%
na.omit() %>%
ggplot(aes(factor(nichd,levels=stages),log2(value))) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(alpha=0.1) +
xlab("") +
ylab("Log2 gene expression") +
ggtitle(paste0("Probe ",probe_," within ",gene_)) +
theme(
axis.text.x = element_text(angle=45,vjust=1,hjust=1)
)
gene_cor_dts[
ade==ade_ & gene==gene_ & PROBEID==probe_
] %>%
ggplot(aes(est)) +
geom_histogram() +
xlab("Random probe and drug risk correlations") +
ylab("Frequency")
obs_vs_random_cor_dts[
gene %in% gene_candidates & gene=="CYP2C8" &
fdr_rprobe<0.05 & pvalue_other_ade>0.05 &
auroc_rprobe>auroc_other_ade,unique(ade)
]
obs_vs_random_cor_dts[
gene %in% gene_candidates & gene=="CYP2C8" &
fdr_rprobe<0.05 & pvalue_other_ade>0.05 &
auroc_rprobe>auroc_other_ade]
obs_vs_random_cor_dts[
gene %in% gene_candidates & gene=="CYP2C8" &
fdr_rprobe<0.05 & pvalue_other_ade>0.05] %>% .[order(auroc_rprobe)]
obs_vs_random_cor_dts[
gene %in% gene_candidates & gene=="CYP2C8" &
fdr_rprobe<0.05 & pvalue_other_ade>0.05] %>% .[order(auroc_rprobe,decreasing = T)] %>% .[,.SD[1],atc_concept_name]
obs_vs_random_cor_dts[
gene %in% gene_candidates & gene=="CYP2C8" &
fdr_rprobe<0.05 & pvalue_other_ade>0.05] %>% .[order(auroc_rprobe,decreasing = T)] %>% .[,.SD[1],atc_concept_name,unique(ade)]
obs_vs_random_cor_dts[
gene %in% gene_candidates & gene=="CYP2C8" &
fdr_rprobe<0.05 & pvalue_other_ade>0.05] %>% .[order(auroc_rprobe,decreasing = T)] %>% .[,.SD[1],atc_concept_name] %>% .[,unique(ade)]
ades <-
obs_vs_random_cor_dts[
gene %in% gene_candidates & gene=="CYP2C8" &
fdr_rprobe<0.05 & pvalue_other_ade>0.05] %>%
.[order(auroc_rprobe,decreasing = T)] %>%
.[,.SD[1],atc_concept_name] %>%
.[,unique(ade)]
plot_drug_events(dts[database=="covariate_adjusted" & ade %in% ades] %>% .[,.SD[1:7],ade_name]) +
guides(
fill=guide_legend(title="Report",title.position = "top"),
color=guide_none()
)
obs_vs_random_cor_dts[
gene %in% predicted_genes &
fdr_rprobe<0.05 & pvalue_other_ade>0.05 &
auroc_rprobe>auroc_other_ade
] %>%
.[,.(Nprobes = length(unique(PROBEID))),gene] %>%
merge(
obs_vs_random_cor_dts[,.(Ntotalprobes = length(unique(PROBEID))),gene],
by="gene"
) %>% .[Nprobes==Ntotalprobes,gene]
nrow(obs_vs_random_cor_dts[gene %in% predicted_genes & fdr_rprobe<0.05 & pvalue_other_ade>0.05])/nrow(obs_vs_random_cor_dts)
obs_vs_random_cor_dts[
pvalue_other_ade>0.05 &
fdr_rprobe<0.05,
length(unique(gene))
]
nrow(obs_vs_random_cor_dts[fdr_rprobe<0.05 & pvalue_other_ade>0.05])
nrow(obs_vs_random_cor_dts[fdr_rprobe<0.05 & pvalue_other_ade>0.05])/nrow(obs_vs_random_cor_dts)
nrow(obs_vs_random_cor_dts[fdr_rprobe<0.05 & pvalue_other_ade>0.05 & mean_est>mean_random_rprobe_dist])
nrow(obs_vs_random_cor_dts[fdr_rprobe<0.05 & pvalue_other_ade>0.05 & mean_est>mean_random_rprobe_dist & mean_est>mean_random_ade_dist_])
nrow(obs_vs_random_cor_dts[fdr_rprobe<0.05 & pvalue_other_ade>0.05 & mean_est>mean_random_rprobe_dist])/nrow(obs_vs_random_cor_dts)
nrow(obs_vs_random_cor_dts[fdr_rprobe<0.05 & pvalue_other_ade>0.05 & mean_est>mean_random_ade_dist])/nrow(obs_vs_random_cor_dts)
nrow(obs_vs_random_cor_dts[fdr_rprobe<0.05 & pvalue_other_ade>0.05 & mean_est>mean_random_ade_dist_])/nrow(obs_vs_random_cor_dts)
nrow(obs_vs_random_cor_dts[fdr_rprobe<0.05 & pvalue_other_ade>0.05 & mean_est>mean_random_ade_dist_])
obs_vs_random_cor_dts[fdr_rprobe<0.05 & pvalue_other_ade>0.05 & mean_est>mean_random_ade_dist_,unique(gene)]
obs_vs_random_cor_dts %>%
ggplot() +
geom_histogram(aes(auroc_rprobe,
fill="CYP substrate drug risk vs. random probe expression"),alpha=0.5) +
geom_histogram(aes(auroc_other_ade,
fill="non-substrate drug risk vs. CYP probe expression"),alpha=0.5) +
geom_histogram(aes(auroc_other_ade_rprobe,
fill="non-substrate drug risk vs. random probe expression"),alpha=0.5) +
guides(fill=guide_legend(title="Comparison",title.position = "top",ncol=1)) +
xlab("AUROC") +
ylab("Frequency") +
theme(
legend.position = "bottom"
)
obs_vs_random_cor_dts %>%
.[,.(auroc_rprobe,auroc_other_ade,gene,pvalue = pvalue_rprobe)] %>%
ggplot() +
geom_point(aes(auroc_rprobe,auroc_other_ade,fill=-log10(pvalue)),pch=21) +
geom_abline(slope=1,intercept=0,size=1,color="red",linetype="dashed") +
facet_wrap(~gene) +
scale_fill_viridis_c() +
xlab("Mutual Information AUROC \nCYP substrate drug risk vs. random probe expression") +
ylab("Mutual Information AUROC\nnon-substrate drug risk vs. CYP probe expression") +
theme(
strip.background = element_blank()
)
sig_log =
fdr_rprobe<0.05 & pvalue_other_ade>0.05 & mean_est>mean_random_ade_dist_
obs_vs_random_cor_dts[
fdr_rprobe<0.05 & pvalue_other_ade>0.05 & mean_est>mean_random_ade_dist_,
length(unique(gene))
]
obs_vs_random_cor_dts[
fdr_rprobe<0.05 & pvalue_other_ade>0.05 & mean_est>mean_random_ade_dist_,
unique(gene)]
tmp = obs_vs_random_cor_dts
tmp[
fdr_rprobe<0.05 & pvalue_other_ade>0.05 & mean_est>mean_random_ade_dist_,
.(m = mean(auroc_rprobe)),gene] %>% .[order(m)] %>% .[,gene]
gene_ord <-
tmp[
fdr_rprobe<0.05 & pvalue_other_ade>0.05 & mean_est>mean_random_ade_dist_,
.(m = mean(auroc_rprobe)),gene] %>% .[order(m)] %>% .[,gene]
tmp$gene <- factor(obs_vs_random_cor_dts$gene,levels=gene_ord)
tmp[
gene %in% predicted_genes &
fdr_rprobe<0.05 & pvalue_other_ade>0.05 & mean_est>mean_random_ade_dist_
] %>%
ggplot(aes(auroc_rprobe,gene)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(pch=21,fill="gray",color="black") +
xlab("Mutual Information AUROC \nCYP substrate drug risk vs. random probe expression") +
ylab("")
g <- tmp[
gene %in% predicted_genes &
fdr_rprobe<0.05 & pvalue_other_ade>0.05 & mean_est>mean_random_ade_dist_
] %>%
ggplot(aes(auroc_rprobe,gene)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(pch=21,fill="gray",color="black") +
xlab("Mutual Information AUROC \nCYP substrate drug risk vs. random probe expression") +
ylab("")
ggsave(paste0(img_dir,basename,"drug_risk_vs_probe_expression_significant_ades_by_gene.png"),g,width=8,height=6)
obs_vs_random_cor_dts[
gene %in% predicted_genes &
fdr_rprobe<0.05 & pvalue_other_ade>0.05 & mean_est>mean_random_ade_dist_
] %>%
.[,.(Nades = length(unique(ade))),gene]
obs_vs_random_cor_dts[
gene %in% predicted_genes &
fdr_rprobe<0.05 & pvalue_other_ade>0.05 & mean_est>mean_random_ade_dist_
] %>%
.[,.(Nades = length(unique(ade))),gene] %>%
merge(
obs_vs_random_cor_dts[,.(Ntotalades = length(unique(ade))),gene],
by="gene"
) %>%
.[,.(Nades,Ntotalades,
null = binom.test(Nades,Ntotalades,alternative = "g")$null.value,
lwr = binom.test(Nades,Ntotalades,alternative = "g")$conf.int[1],
est = binom.test(Nades,Ntotalades,alternative = "g")$estimate,
upr = binom.test(Nades,Ntotalades,alternative = "g")$conf.int[2],
pvalue = binom.test(Nades,Ntotalades,alternative = "g")$p.value),
gene]
obs_vs_random_cor_dts[
gene %in% predicted_genes &
fdr_rprobe<0.05 & pvalue_other_ade>0.05 & mean_est>mean_random_ade_dist_
] %>%
.[,.(Nprobes = length(unique(PROBEID))),gene] %>%
merge(
obs_vs_random_cor_dts[,.(Ntotalprobes = length(unique(PROBEID))),gene],
by="gene"
) %>% .[Nprobes==Ntotalprobes,gene]
gene_candidates <-
obs_vs_random_cor_dts[
gene %in% predicted_genes &
fdr_rprobe<0.05 & pvalue_other_ade>0.05 & mean_est>mean_random_ade_dist_
] %>%
.[,.(Nprobes = length(unique(PROBEID))),gene] %>%
merge(
obs_vs_random_cor_dts[,.(Ntotalprobes = length(unique(PROBEID))),gene],
by="gene"
) %>% .[Nprobes==Ntotalprobes,gene]
obs_vs_random_cor_dts[
gene %in% gene_candidates & gene=="CYP2C8" &
fdr_rprobe<0.05 & pvalue_other_ade>0.05 & mean_est>mean_random_ade_dist_
]
obs_vs_random_cor_dts[
gene %in% gene_candidates & gene=="CYP2C8" &
fdr_rprobe<0.05 & pvalue_other_ade>0.05] %>%
.[order(auroc_rprobe,decreasing = T)] %>%
.[,.SD[1],atc_concept_name] %>%
.[,unique(ade)]
ades <-
obs_vs_random_cor_dts[
gene %in% gene_candidates & gene=="CYP2C8" &
fdr_rprobe<0.05 & pvalue_other_ade>0.05] %>%
.[order(auroc_rprobe,decreasing = T)] %>%
.[,.SD[1],atc_concept_name] %>%
.[,unique(ade)]
g <- plot_drug_events(dts[database=="covariate_adjusted" & ade %in% ades] %>% .[,.SD[1:7],ade_name]) +
guides(
fill=guide_legend(title="Report",title.position = "top"),
color=guide_none()
)
ggsave(paste0(img_dir,basename,"drug_risk_vs_probe_expression_significant_candidate_genes_ades.png"),g,width=12,height=9)
obs_vs_random_cor_dts[
gene %in% gene_candidates & gene=="CYP2C8" &
fdr_rprobe<0.05 & pvalue_other_ade>0.05] %>%
.[order(auroc_rprobe,decreasing = T)] %>%
.[,.SD[1],atc_concept_name]
obs_vs_random_cor_dts[
gene %in% gene_candidates & gene=="CYP2C8" &
fdr_rprobe<0.05 & pvalue_other_ade>0.05 & mean_est>mean_random_ade_dist_
]
obs_vs_random_cor_dts[
gene %in% gene_candidates & gene=="CYP2C8" &
fdr_rprobe<0.05 & pvalue_other_ade>0.05] %>%
.[order(auroc_rprobe,decreasing = T)] %>%
.[,.SD[1],atc_concept_name] %>%
.[,.(ade_name,gene)] %>%
unique()
obs_vs_random_cor_dts[
gene %in% gene_candidates & gene=="CYP2C8" &
fdr_rprobe<0.05 & pvalue_other_ade>0.05] %>%
.[order(auroc_rprobe,decreasing = T)] %>%
.[,.SD[1],atc_concept_name] %>%
.[,.(ade,atc_concept_name,gene)] %>%
unique()
obs_vs_random_cor_dts[
gene %in% gene_candidates &
fdr_rprobe<0.05 & pvalue_other_ade>0.05 & mean_est>mean_random_ade_dist_
]
obs_vs_random_cor_dts[
gene %in% gene_candidates &
fdr_rprobe<0.05 & pvalue_other_ade>0.05] %>%
.[order(auroc_rprobe,decreasing = T)] %>%
.[,.SD[1],atc_concept_name] %>%
.[,.(ade,atc_concept_name,gene)] %>%
unique()
ades <-
obs_vs_random_cor_dts[
gene %in% gene_candidates &
fdr_rprobe<0.05 & pvalue_other_ade>0.05] %>%
.[order(auroc_rprobe,decreasing = T)] %>%
.[,.SD[1],atc_concept_name] %>%
.[,unique(ade)]
g <- plot_drug_events(dts[database=="covariate_adjusted" & ade %in% ades] %>% .[,.SD[1:7],ade_name]) +
guides(
fill=guide_legend(title="Report",title.position = "top"),
color=guide_none()
)
ggsave(paste0(img_dir,basename,"drug_risk_vs_probe_expression_significant_candidate_genes_ades.png"),g,width=12,height=9)
obs_vs_random_cor_dts[
gene %in% gene_candidates &
fdr_rprobe<0.05 & pvalue_other_ade>0.05] %>%
.[order(auroc_rprobe,decreasing = T)] %>%
.[,.SD[1],atc_concept_name] %>%
.[,.(ade,atc_concept_name,gene)] %>%
unique()
drugbank_cyp_substrates[parent_key=="DB00404"]
setwd("~/GitHub/omics_to_omop")
#install.packages("devtools")
devtools::install_github("ngiangre/ROMOPOmics",force=T)
library(ROMOPOmics)
dm_file <-
system.file("extdata","OMOP_CDM_v6_0_custom.csv",package="ROMOPOmics",mustWork = TRUE)
dm <-
loadDataModel(master_table_file = dm_file)
dm
tail(dm)
system.file("extdata","brca_clinical.csv",package="ROMOPOmics",mustWork = TRUE)
read_csv("data/mock/bgdc2021.csv")
pacman::p_load(tidyverse)
read_csv("data/mock/bgdc2021.csv")
list(
"bgdc2021" =
read_csv("data/mock/bgdc2021.csv")
)
mock_files  <-
list(
"bgdc2021" =
read_csv("data/mock/bgdc2021.csv")
)
msks <-
list(
bgdc2021=loadModelMasks(read_csv("data/mock/mask_bgdc2021.csv"))
)
read_csv("data/mock/mask_bgdc2021.csv")
list(
"bgdc2021"=loadModelMasks(read_csv("data/mock/mask_bgdc2021.csv"))
)
loadModelMasks(read_csv("data/mock/mask_bgdc2021.csv"))
loadModelMasks("data/mock/mask_bgdc2021.csv")
msks <-
list(
"bgdc2021"=loadModelMasks("data/mock/mask_bgdc2021.csv")
)
mock_files  <-
list(
"bgdc2021" =
"data/mock/bgdc2021.csv"
)
omop_inputs <-
list(
bgdc2021=
readInputFile(
input_file = mock_files$bgdc2021,
data_model = dm,
mask_table = msks$bgdc2021
)
)
msks <-
list(
"bgdc2021"=loadModelMasks("data/mock/mask_bgdc2021.csv")
)
omop_inputs <-
list(
bgdc2021=
readInputFile(
input_file = mock_files$bgdc2021,
data_model = dm,
mask_table = msks$bgdc2021
)
)
db_inputs   <- combineInputTables(input_table_list = omop_inputs)
db_inputs
omop_inputs
msks
readInputFile(
input_file = mock_files$bgdc2021,
data_model = dm,
mask_table = msks$bgdc2021
)
list(
bgdc2021=
readInputFile(
input_file = mock_files$bgdc2021,
data_model = dm,
mask_table = msks$bgdc2021
)
)
omop_inputs$bgdc2021$table
omop_inputs$bgdc2021$bgdc20211_1
mock_files$bgdc2021
sks$bgdc2021
msks$bgdc2021
View(dm)
msks <-
list(
"bgdc2021"=loadModelMasks("data/mock/mask_bgdc2021.csv")
)
list(
bgdc2021=
readInputFile(
input_file = mock_files$bgdc2021,
data_model = dm,
mask_table = msks$bgdc2021
)
)
omop_inputs <-
list(
bgdc2021=
readInputFile(
input_file = mock_files$bgdc2021,
data_model = dm,
mask_table = msks$bgdc2021
)
)
combineInputTables(input_table_list = omop_inputs)
msks <-
list(
"bgdc2021"=loadModelMasks("data/mock/bgdc2021_mask.csv")
)
omop_inputs <-
list(
bgdc2021=
readInputFile(
input_file = mock_files$bgdc2021,
data_model = dm,
mask_table = msks$bgdc2021
)
)
omop_inputs
omop_inputs <-
list(
bgdc2021=
readInputFile(
input_file = mock_files$bgdc2021,
data_model = dm,
mask_table = msks$bgdc2021
)
)
db_inputs   <- combineInputTables(input_table_list = omop_inputs)
db_inputs
msks <-
list(
"bgdc2021"=loadModelMasks("data/mock/bgdc2021_mask.csv")
)
omop_inputs <-
list(
bgdc2021=
readInputFile(
input_file = mock_files$bgdc2021,
data_model = dm,
mask_table = msks$bgdc2021
)
)
combineInputTables(input_table_list = omop_inputs)
mock_files$bgdc2021
msks$bgdc2021
readInputFile(
input_file = "data/mock/bgdc2021.csv",
data_model = dm,
mask_table = loadModelMasks("data/mock/bgdc2021_mask.csv")
)
#install.packages("devtools")
devtools::install_github("ngiangre/ROMOPOmics",force=T)
dm_file <-
system.file("extdata","OMOP_CDM_v6_0_custom.csv",package="ROMOPOmics",mustWork = TRUE)
dm <-
loadDataModel(master_table_file = dm_file)
dm
readInputFile(
input_file = "data/mock/bgdc2021.csv",
data_model = dm,
mask_table = loadModelMasks("data/mock/bgdc2021_mask.csv")
)
View(dm)
#install.packages("devtools")
devtools::install_github("ngiangre/ROMOPOmics",force=T)
library(ROMOPOmics)
dm_file <-
system.file("extdata","OMOP_CDM_v6_0_custom.csv",package="ROMOPOmics",mustWork = TRUE)
dm <-
loadDataModel(master_table_file = dm_file)
omop_inputs <-
list(
bgdc2021=
readInputFile(
input_file = "data/mock/bgdc2021.csv",
data_model = dm,
mask_table = loadModelMasks("data/mock/bgdc2021_mask.csv")
)
)
db_inputs   <- combineInputTables(input_table_list = omop_inputs)
db_inputs
View(dm)
readInputFile(
input_file = "data/mock/bgdc2021.csv",
data_model = dm,
mask_table = loadModelMasks("data/mock/bgdc2021_mask.csv")
)
omop_inputs <-
list(
bgdc2021=
readInputFile(
input_file = "data/mock/bgdc2021.csv",
data_model = dm,
mask_table = loadModelMasks("data/mock/bgdc2021_mask.csv")
)
)
combineInputTables(input_table_list = omop_inputs)
db_inputs   <- combineInputTables(input_table_list = omop_inputs)
omop_db     <- buildSQLDBR(omop_tables = db_inputs,file.path(tempdir(),"mock.sqlite"))
DBI::dbListTables(omop_db)
